<UserControl x:Class="VorTech.App.Views.ArticlesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignWidth="1200" d:DesignHeight="600">
    <UserControl.Resources>

        <!-- (A) Brushes locaux (si déjà définis dans Dark.xaml, ils seront ignorés par les DynamicResource) -->
        <SolidColorBrush x:Key="Fore"            Color="#FFECECEC"/>
        <SolidColorBrush x:Key="Back"            Color="#FF1E1E1E"/>
        <SolidColorBrush x:Key="ControlBg"       Color="#FF2A2A2A"/>
        <SolidColorBrush x:Key="ControlBorder"   Color="#FF3A3A3A"/>
        <SolidColorBrush x:Key="Accent"          Color="#FF3A86FF"/>
        <SolidColorBrush x:Key="Muted"           Color="#FF8A8A8A"/>

        <!-- (B) Override des clés système utilisées par le template par défaut des ComboBox (fond du Popup) -->
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}"         Color="#FF2A2A2A"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}"     Color="#FFECECEC"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"      Color="#553A86FF"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"  Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlDarkBrushKey}"    Color="#FF3A3A3A"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlLightBrushKey}"   Color="#FF2A2A2A"/>

        <!-- (C) Style de base pour ComboBox -->
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment"   Value="Center"/>
            <Setter Property="Foreground"   Value="{DynamicResource Fore}"/>
            <Setter Property="Background"   Value="{DynamicResource ControlBg}"/>
            <Setter Property="BorderBrush"  Value="{DynamicResource ControlBorder}"/>
            <Setter Property="Padding"      Value="6,3"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- Zone fermée -->
                            <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="4"
                    Padding="{TemplateBinding Padding}">
                                <DockPanel>
                                    <ContentPresenter Margin="2,0,24,0"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"/>
                                    <!-- Chevron -->
                                    <Path DockPanel.Dock="Right" Margin="0,0,6,0" VerticalAlignment="Center"
                      Data="M 0 0 L 8 0 L 4 4 Z"
                      Fill="{DynamicResource Fore}"/>
                                </DockPanel>
                            </Border>

                            <!-- Popup -->
                            <Popup x:Name="Popup"
                   Placement="Bottom"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Slide">
                                <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                      BorderBrush="{DynamicResource ControlBorder}"
                      BorderThickness="1"
                      CornerRadius="4">
                                    <ScrollViewer CanContentScroll="True">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- (D) Style des éléments du dropdown -->
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Foreground" Value="{DynamicResource Fore}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding"    Value="8,4"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource Muted}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- (E) Dark pour ContextMenu / MenuItem (menus contextuels des images) -->
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="Background"   Value="{DynamicResource ControlBg}"/>
            <Setter Property="Foreground"   Value="{DynamicResource Fore}"/>
            <Setter Property="BorderBrush"  Value="{DynamicResource ControlBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="{DynamicResource Fore}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding"    Value="12,6"/>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GridEditTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{DynamicResource Fore}"/>
            <Setter Property="Background" Value="{DynamicResource ControlBg}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ControlBorder}"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>

    <Grid Margin="12">
        <!-- 5 colonnes : liste | sep | fiche | sep | images -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="340"/>
            <!-- 0: liste -->
            <ColumnDefinition Width="16"/>
            <!-- 1: séparateur A -->
            <ColumnDefinition Width="*"/>
            <!-- 2: fiche -->
            <ColumnDefinition Width="16"/>
            <!-- 3: séparateur B -->
            <ColumnDefinition Width="Auto"/>
            <!-- 4: images -->
        </Grid.ColumnDefinitions>

        <!-- 2 lignes : haut (fiche+images) / bas (déclinaisons+pack) -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- 0 -->
            <RowDefinition Height="*"/>
            <!-- 1 -->
        </Grid.RowDefinitions>

        <!-- ===================== ZONE 1 : LISTE ===================== -->
        <GroupBox Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Header="Articles">
            <DockPanel>
                <!-- Barre de recherche en haut -->
                <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Margin="6,6,6,0">
                    <TextBlock Text="Rechercher par libellé" Margin="0,0,0,4"/>
                    <TextBox x:Name="SearchBox" TextChanged="SearchBox_TextChanged"/>
                </StackPanel>

                <!-- Liste -->
                <DataGrid x:Name="GridArticles"
                  Margin="6"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserResizeRows="False"
                  CanUserReorderColumns="False"
                  IsReadOnly="True"
                  SelectionMode="Single"
                  SelectionUnit="FullRow"
                  HeadersVisibility="Column"
                  SelectionChanged="GridArticles_SelectionChanged"
                  BeginningEdit="GridArticles_BeginningEdit">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Libellé" Binding="{Binding Libelle}" Width="2*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Prix"    Binding="{Binding PrixVenteHT, StringFormat=0.00}" Width="*" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Stock"   Binding="{Binding StockActuel, StringFormat=0}"    Width="*" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>

        <!-- Séparateur A (sur 2 lignes) -->
        <Border Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Background="Transparent"/>

        <!-- ===================== ZONE 2 : FICHE ===================== -->
        <GroupBox x:Name="FicheCard" Grid.Column="2" Grid.Row="0" Header="Fiche article"
              HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
            <ScrollViewer x:Name="FicheScroll" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <Grid Margin="6" Width="{Binding ElementName=FicheScroll, Path=ViewportWidth}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <!-- barre d'actions -->
                        <RowDefinition Height="Auto"/>
                        <!-- formulaire -->
                    </Grid.RowDefinitions>

                    <!-- Barre d'actions -->
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,0,0,8">
                        <Button x:Name="BtnNew"    Content="Nouveau"    Click="BtnNew_Click"    Margin="0,0,8,0" Width="110"/>
                        <Button x:Name="BtnSave"   Content="Enregistrer" Click="BtnSave_Click"  Margin="0,0,8,0" Width="110"/>
                        <Button x:Name="BtnDelete" Content="Supprimer"   Click="BtnDelete_Click" Margin="0,0,8,0" Width="110"/>
                        <Button x:Name="BtnReload" Content="Recharger"   Click="BtnReload_Click" Width="110"/>
                    </StackPanel>

                    <!-- Formulaire 4 colonnes -->
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Code / Libellé -->
                            <RowDefinition Height="Auto"/>
                            <!-- Type / Catégorie -->
                            <RowDefinition Height="Auto"/>
                            <!-- Cotisation / TVA -->
                            <RowDefinition Height="Auto"/>
                            <!-- Prix d'achat / Poids -->
                            <RowDefinition Height="Auto"/>
                            <!-- Prix conseillé / Prix de vente -->
                            <RowDefinition Height="Auto"/>
                            <!-- Stock / Seuil -->
                            <RowDefinition Height="Auto"/>
                            <!-- Actif / Dernière MAJ -->
                            <RowDefinition Height="Auto"/>
                            <!-- Code-barres / Boutons CB -->
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="160"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="160"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- 1) Code / Libellé -->
                        <Label Grid.Row="0" Grid.Column="0" Content="Code" VerticalAlignment="Center"/>
                        <TextBox x:Name="SkuBox"     Grid.Row="0" Grid.Column="1" Margin="0,0,16,8"/>
                        <Label Grid.Row="0" Grid.Column="2" Content="Libellé"/>
                        <TextBox x:Name="LibelleBox" Grid.Row="0" Grid.Column="3" Margin="0,0,0,8"/>

                        <!-- 2) Type / Catégorie -->
                        <Label Grid.Row="1" Grid.Column="0" Content="Type" VerticalAlignment="Center"/>
                        <StackPanel Grid.Row="1" Grid.Column="1"
                                Orientation="Horizontal" Margin="0,0,16,8"
                                VerticalAlignment="Center" Height="30">
                            <RadioButton x:Name="TypeArticleRadio" Content="Article"
                               Margin="0,0,16,0" VerticalAlignment="Center"
                               Checked="TypeRadio_Checked"/>
                            <RadioButton x:Name="TypePackRadio"    Content="Pack"
                               VerticalAlignment="Center"
                               Checked="TypeRadio_Checked"/>
                        </StackPanel>

                        <Label Grid.Row="1" Grid.Column="2" Content="Catégorie" VerticalAlignment="Center"/>
                        <ComboBox x:Name="CategorieBox" Grid.Row="1" Grid.Column="3" Margin="0,0,0,8"/>

                        <!-- 3) Cotisation / TVA -->
                        <Label Grid.Row="2" Grid.Column="0" Content="Cotisation" VerticalAlignment="Center"/>
                        <ComboBox x:Name="CotisationBox" Grid.Row="2" Grid.Column="1" Margin="0,0,16,8"/>
                        <Label Grid.Row="2" Grid.Column="2" Content="TVA"/>
                        <ComboBox x:Name="TvaBox"        Grid.Row="2" Grid.Column="3" Margin="0,0,0,8"/>

                        <!-- 4) Prix d'achat / Poids -->
                        <Label Grid.Row="3" Grid.Column="0" Content="Prix d'achat HT" VerticalAlignment="Center"/>
                        <TextBox x:Name="PrixAchatBox" Grid.Row="3" Grid.Column="1" Margin="0,0,16,8" TextChanged="PrixAchatBox_TextChanged"/>
                        <Label Grid.Row="3" Grid.Column="2" Content="Poids (g)"/>
                        <TextBox x:Name="PoidsBox"    Grid.Row="3" Grid.Column="3" Margin="0,0,0,8"/>

                        <!-- 5) Prix conseillé / Prix de vente -->
                        <Label Grid.Row="4" Grid.Column="0" Content="Prix conseillé HT" VerticalAlignment="Center"/>
                        <TextBlock x:Name="PrixConseilleText"
                           Grid.Row="4" Grid.Column="1"
                           Margin="0,10,16,0"
                           VerticalAlignment="Top" MinHeight="30"
                           Text="0.00" Grid.RowSpan="2"/>
                        <Label Grid.Row="4" Grid.Column="2" Content="Prix de vente HT" VerticalAlignment="Center"/>
                        <TextBox x:Name="PrixVenteBox"     Grid.Row="4" Grid.Column="3" Margin="0,0,0,8"/>

                        <!-- 6) Stock / Seuil -->
                        <Label Grid.Row="5" Grid.Column="0" Content="Stock actuel" VerticalAlignment="Center"/>
                        <TextBox x:Name="StockBox" Grid.Row="5" Grid.Column="1" Margin="0,0,16,8"/>
                        <Label Grid.Row="5" Grid.Column="2" Content="Seuil alerte" VerticalAlignment="Center"/>
                        <TextBox x:Name="SeuilBox"  Grid.Row="5" Grid.Column="3" Margin="0,0,0,8"/>

                        <!-- 7) Actif / Dernière MAJ -->
                        <Label Grid.Row="6" Grid.Column="0" Content="Actif" VerticalAlignment="Center"/>
                        <CheckBox x:Name="ActifBox"
                          Grid.Row="6" Grid.Column="1"
                          Margin="0,0,16,8"
                          VerticalAlignment="Center" Height="30"/>
                        <Label Grid.Row="6" Grid.Column="0" Content="Actif" VerticalAlignment="Center"/>
                        <TextBlock x:Name="DerniereMajText"
                           Grid.Row="6" Grid.Column="3"
                           Margin="0,0,0,8"
                           VerticalAlignment="Center" MinHeight="30"/>
                        <Label Grid.Row="6" Grid.Column="2" Content="Dernière mise à jour" VerticalAlignment="Center"/>
                        <!-- 8) Code-barres : champ + boutons sur une seule ligne -->
                        <Label Grid.Row="7" Grid.Column="0" Content="Code-barres" VerticalAlignment="Center"/>

                        <Grid Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="3" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="CodeBarresBox" Grid.Column="0" Margin="0,0,8,0"/>
                            <Button x:Name="BtnGenBarcode"
                              Grid.Column="1" Content="Générer"
                              Margin="0,0,8,0" Width="100" Height="30"
                              Click="BtnGenBarcode_Click"/>
                            <Button x:Name="BtnScanBarcode"
                              Grid.Column="2" Content="Scanner"
                              Width="100" Height="30"
                              Click="BtnScanBarcode_Click"/>
                        </Grid>
                    </Grid>
                </Grid>
            </ScrollViewer>
        </GroupBox>

        <!-- Séparateur B (sur 2 lignes) -->
        <Border Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Background="Transparent"/>

        <!-- ===================== ZONE IMG (alignée sur la fiche) ===================== -->
        <GroupBox Grid.Column="4" Grid.Row="0" Header="Images"
              HorizontalAlignment="Left" HorizontalContentAlignment="Stretch"
              MinWidth="260" MaxWidth="360">
            <!-- la hauteur ne doit pas dépasser la hauteur de la fiche -->
            <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled"
                    MaxHeight="{Binding ElementName=FicheCard, Path=ActualHeight}">
                <StackPanel Margin="6">
                    <Button x:Name="BtnImportImage" Content="Importer une image" Width="160" Margin="0,0,0,8" Click="BtnImportImage_Click"/>
                    <UniformGrid Columns="2" Rows="2">
                        <Border BorderBrush="{DynamicResource Fore}" BorderThickness="1" Padding="4" Margin="0,0,8,8">
                            <Grid>
                                <Image x:Name="ImgSlot1" Stretch="Uniform" Height="100"/>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Ouvrir le dossier contenant" Tag="1" Click="Img_OpenFolder_Click"/>
                                        <MenuItem Header="Supprimer l'image" Tag="1" Click="Img_Delete_Click"/>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                            </Grid>
                        </Border>

                        <Border BorderBrush="{DynamicResource Fore}" BorderThickness="1" Padding="4" Margin="0,0,0,8">
                            <Grid>
                                <Image x:Name="ImgSlot2" Stretch="Uniform" Height="100"/>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Ouvrir le dossier contenant" Tag="2" Click="Img_OpenFolder_Click"/>
                                        <MenuItem Header="Supprimer l'image" Tag="2" Click="Img_Delete_Click"/>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                            </Grid>
                        </Border>

                        <Border BorderBrush="{DynamicResource Fore}" BorderThickness="1" Padding="4" Margin="0,0,8,0">
                            <Grid>
                                <Image x:Name="ImgSlot3" Stretch="Uniform" Height="100"/>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Ouvrir le dossier contenant" Tag="3" Click="Img_OpenFolder_Click"/>
                                        <MenuItem Header="Supprimer l'image" Tag="3" Click="Img_Delete_Click"/>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                            </Grid>
                        </Border>

                        <Border BorderBrush="{DynamicResource Fore}" BorderThickness="1" Padding="4" Margin="0">
                            <Grid>
                                <Image x:Name="ImgSlot4" Stretch="Uniform" Height="100"/>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Ouvrir le dossier contenant" Tag="4" Click="Img_OpenFolder_Click"/>
                                        <MenuItem Header="Supprimer l'image" Tag="4" Click="Img_Delete_Click"/>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                            </Grid>
                        </Border>
                    </UniformGrid>
                </StackPanel>
            </ScrollViewer>
        </GroupBox>

        <!-- ===================== ZONE 4 : BAS (Déclinaisons + Pack) ===================== -->
        <Grid Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="3" Margin="0,8,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="12"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Déclinaisons -->
            <GroupBox Header="Déclinaisons" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="6,6,6,8">
                        <Button Content="Ajouter une variante"     Width="160" Margin="0,0,8,0" Click="BtnAddVariant_Click"/>
                        <Button Content="Enregistrer la variante" Width="180" Margin="0,0,8,0" Click="BtnSaveVariant_Click"/>
                        <Button Content="Supprimer la variante"    Width="160" Click="BtnDeleteVariant_Click"/>
                    </StackPanel>
                    <DataGrid x:Name="GridVariants" Margin="6"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              HeadersVisibility="Column">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Nom"         EditingElementStyle="{StaticResource GridEditTextBoxStyle}" Binding="{Binding Nom}"                         Width="2*"/>
                            <DataGridTextColumn Header="Prix achat"  EditingElementStyle="{StaticResource GridEditTextBoxStyle}" Binding="{Binding PrixAchatHT, StringFormat=0.00}" Width="*"/>
                            <DataGridTextColumn Header="Prix vente"  EditingElementStyle="{StaticResource GridEditTextBoxStyle}" Binding="{Binding PrixVenteHT, StringFormat=0.00}" Width="*"/>
                            <DataGridTextColumn Header="Stock"       EditingElementStyle="{StaticResource GridEditTextBoxStyle}" Binding="{Binding StockActuel, StringFormat=0}"   Width="*"/>
                            <DataGridTextColumn Header="Seuil"       EditingElementStyle="{StaticResource GridEditTextBoxStyle}" Binding="{Binding SeuilAlerte, StringFormat=0}"   Width="*"/>
                            <DataGridTextColumn Header="Code-barres" EditingElementStyle="{StaticResource GridEditTextBoxStyle}" Binding="{Binding CodeBarres}"                    Width="2*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </GroupBox>

            <!-- Pack -->
            <GroupBox Header="Composition du pack" Grid.Column="2" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                <DockPanel>
                    <!-- Barre d’actions Pack -->
                    <Grid DockPanel.Dock="Top" Margin="6,6,6,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Content="Ajouter au pack" Width="140" Margin="0,0,8,0"
                            Click="BtnAddToPack_Click"/>
                        <Button Content="Retirer" Grid.Column="1" Width="100" Margin="0,0,8,0"
                            Click="BtnRemovePackItem_Click"/>
                        <!-- pousse à droite -->
                        <Button x:Name="BtnSavePack" Grid.Column="3"
                          Content="Sauvegarder le pack" Width="160"
                          Click="BtnSavePack_Click"/>
                    </Grid>
                    <DataGrid x:Name="GridPack"
                          Margin="6"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          HeadersVisibility="Column"
                          IsReadOnly="False">
                        <DataGrid.Columns>
                            <!-- Libellé combiné -->
                            <DataGridTextColumn Header="Article / Variante"
                                Binding="{Binding Display}"
                                Width="3*"
                                IsReadOnly="True"/>
                            <!-- Qté éditable -->
                            <DataGridTemplateColumn Header="Qté" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Quantite, StringFormat=0}" HorizontalAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Quantite, UpdateSourceTrigger=PropertyChanged}"
                                           HorizontalContentAlignment="Center"
                                           PreviewTextInput="NumericOnly_PreviewTextInput"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </DockPanel>
            </GroupBox>
        </Grid>
    </Grid>
</UserControl>
